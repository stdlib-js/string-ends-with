// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var t,e;t=this,e=function(){"use strict";var t="function"==typeof Object.defineProperty?Object.defineProperty:null,e=Object.defineProperty,r=Object.prototype,n=r.toString,o=r.__defineGetter__,i=r.__defineSetter__,u=r.__lookupGetter__,l=r.__lookupSetter__,c=function(){try{return t({},"x",{}),!0}catch(t){return!1}}()?e:function(t,e,c){var f,a,p,y;if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof c||null===c||"[object Array]"===n.call(c))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+c+"`.");if((a="value"in c)&&(u.call(t,e)||l.call(t,e)?(f=t.__proto__,t.__proto__=r,delete t[e],t[e]=c.value,t.__proto__=f):t[e]=c.value),p="get"in c,y="set"in c,a&&(p||y))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&o&&o.call(t,e,c.get),y&&i&&i.call(t,e,c.set),t};function f(t,e,r){c(t,e,{configurable:!1,enumerable:!1,writable:!1,value:r})}function a(t){return"number"==typeof t}var p="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function y(){return p&&"symbol"==typeof Symbol.toStringTag}var b=Object.prototype.toString,s=Object.prototype.hasOwnProperty,h="function"==typeof Symbol?Symbol.toStringTag:"",_=y()?function(t){var e,r,n,o,i;if(null==t)return b.call(t);r=t[h],i=h,e=null!=(o=t)&&s.call(o,i);try{t[h]=void 0}catch(e){return b.call(t)}return n=b.call(t),e?t[h]=r:delete t[h],n}:function(t){return b.call(t)},d=Number,g=d.prototype.toString,m=y();function v(t){return"object"==typeof t&&(t instanceof d||(m?function(t){try{return g.call(t),!0}catch(t){return!1}}(t):"[object Number]"===_(t)))}function j(t){return a(t)||v(t)}f(j,"isPrimitive",a),f(j,"isObject",v);var S=Number.POSITIVE_INFINITY,w=d.NEGATIVE_INFINITY,O=Math.floor;function T(t){return t<S&&t>w&&O(e=t)===e;var e}function I(t){return a(t)&&T(t)}function E(t){return v(t)&&T(t.valueOf())}function P(t){return I(t)||E(t)}function A(t){return"string"==typeof t}f(P,"isPrimitive",I),f(P,"isObject",E);var N=String.prototype.valueOf,C=y();function V(t){return"object"==typeof t&&(t instanceof String||(C?function(t){try{return N.call(t),!0}catch(t){return!1}}(t):"[object String]"===_(t)))}function x(t){return A(t)||V(t)}function F(){var t,e=arguments,r=e[0],n="https://stdlib.io/e/"+r+"?";for(t=1;t<e.length;t++)n+="&arg[]="+encodeURIComponent(e[t]);return n}return f(x,"isPrimitive",A),f(x,"isObject",V),function(t,e,r){var n,o;if(!A(t))throw new TypeError(F("0hA3R",t));if(!A(e))throw new TypeError(F("0hA3L",e));if(arguments.length>2){if(!I(r))throw new TypeError(F("0hA3B",r));if(0===r)return 0===e.length;n=r<0?t.length+r:r}else n=t.length;if(0===e.length)return!0;if((n-=e.length)<0)return!1;for(o=0;o<e.length;o++)if(t.charCodeAt(n+o)!==e.charCodeAt(o))return!1;return!0}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).endsWith=e();
//# sourceMappingURL=index.js.map
